(()=>{"use strict";var t={};function i(t,i,e){return Math.min(Math.max(t,e),i)}function e(t,i){let e=s(t),h=s(i);return!(t.radius&&e.width!=e.height||i.radius&&h.width!=h.height)&&([e,h]=[e,h].map((s=>((s==e?t:i).radius&&(s.radius=s.width/2,s.x+=s.radius,s.y+=s.radius),s))),t.radius&&i.radius?Math.hypot(e.x-h.x,e.y-h.y)<e.radius+h.radius:t.radius||i.radius?o(t.radius?e:h,t.radius?i:t):e.x<h.x+h.width&&e.x+e.width>h.x&&e.y<h.y+h.height&&e.y+e.height>h.y)}function s(t){let{x:i=0,y:e=0,width:s,height:h,radius:a}=t.world||t;return t.mapwidth&&(s=t.mapwidth,h=t.mapheight),a&&(s=2*a.x,h=2*a.y),t.anchor&&(i-=s*t.anchor.x,e-=h*t.anchor.y),s<0&&(i+=s,s*=-1),h<0&&(e+=h,h*=-1),{x:i,y:e,width:s,height:h}}t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var i;t.g.importScripts&&(i=t.g.location+"");var e=t.g.document;if(!i&&e&&(e.currentScript&&(i=e.currentScript.src),!i)){var s=e.getElementsByTagName("script");if(s.length)for(var h=s.length-1;h>-1&&(!i||!/^http(s?):/.test(i));)i=s[h--].src}if(!i)throw new Error("Automatic publicPath is not supported in this browser");i=i.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=i})();let h=()=>{},a={preventScroll:!0};function n(t,i){let e=i.parentNode;t.setAttribute("data-kontra",""),e?([...e.querySelectorAll(":scope > [data-kontra]")].pop()||i).after(t):"CANVAS"==i.nodeName?document.body.append(t):i.append(t)}function r(t,i){let e=t.indexOf(i);if(-1!=e)return t.splice(e,1),!0}function o(t,i){let{x:e,y:h,width:a,height:n}=s(i);do{e-=i.sx||0,h-=i.sy||0}while(i=i.parent);let r=t.x-Math.max(e,Math.min(t.x,e+a)),o=t.y-Math.max(h,Math.min(t.y,h+n));return r*r+o*o<t.radius*t.radius}let d,l,c={};function y(t,i){c[t]=c[t]||[],c[t].push(i)}function x(t,...i){(c[t]||[]).map((t=>t(...i)))}let u={get:(t,i)=>"_proxy"==i||h};function m(){return d}function p(){return l}class g{constructor({spriteSheet:t,frames:i,frameRate:e,loop:s=!0,name:h}){let{width:a,height:n,spacing:r=0,margin:o=0}=t.frame;Object.assign(this,{spriteSheet:t,frames:i,frameRate:e,loop:s,name:h,width:a,height:n,spacing:r,margin:o,isStopped:!1,_f:0,_a:0})}clone(){return new g(this)}start(){this.isStopped=!1,this.loop||this.reset()}stop(){this.isStopped=!0}reset(){this._f=0,this._a=0}update(t=1/60){if(!this.isStopped)if(this.loop||this._f!=this.frames.length-1)for(this._a+=t;this._a*this.frameRate>=1;)this._f=++this._f%this.frames.length,this._a-=1/this.frameRate;else this.stop()}render({x:t,y:i,width:e=this.width,height:s=this.height,context:h=p()}){let a=this.frames[this._f]/this.spriteSheet._f|0,n=this.frames[this._f]%this.spriteSheet._f|0;h.drawImage(this.spriteSheet.image,this.margin+n*this.width+(2*n+1)*this.spacing,this.margin+a*this.height+(2*a+1)*this.spacing,this.width,this.height,t,i,e,s)}}function f(){return new g(...arguments)}class w{constructor(t=0,i=0,e={}){null!=t.x?(this.x=t.x,this.y=t.y):(this.x=t,this.y=i),e._c&&(this.clamp(e._a,e._b,e._d,e._e),this.x=t,this.y=i)}set(t){this.x=t.x,this.y=t.y}add(t){return new w(this.x+t.x,this.y+t.y,this)}subtract(t){return new w(this.x-t.x,this.y-t.y,this)}scale(t){return new w(this.x*t,this.y*t)}normalize(t=this.length()||1){return new w(this.x/t,this.y/t)}dot(t){return this.x*t.x+this.y*t.y}length(){return Math.hypot(this.x,this.y)}distance(t){return Math.hypot(this.x-t.x,this.y-t.y)}angle(t){return Math.acos(this.dot(t)/(this.length()*t.length()))}direction(){return Math.atan2(this.y,this.x)}clamp(t,i,e,s){this._c=!0,this._a=t,this._b=i,this._d=e,this._e=s}get x(){return this._x}get y(){return this._y}set x(t){this._x=this._c?i(this._a,this._d,t):t}set y(t){this._y=this._c?i(this._b,this._e,t):t}}function _(){return new w(...arguments)}class v{constructor(t){return this.init(t)}init(t={}){this.position=_(),this.velocity=_(),this.acceleration=_(),this.ttl=1/0,Object.assign(this,t)}update(t){this.advance(t)}advance(t){let i=this.acceleration;t&&(i=i.scale(t)),this.velocity=this.velocity.add(i);let e=this.velocity;t&&(e=e.scale(t)),this.position=this.position.add(e),this._pc(),this.ttl--}get dx(){return this.velocity.x}get dy(){return this.velocity.y}set dx(t){this.velocity.x=t}set dy(t){this.velocity.y=t}get ddx(){return this.acceleration.x}get ddy(){return this.acceleration.y}set ddx(t){this.acceleration.x=t}set ddy(t){this.acceleration.y=t}isAlive(){return this.ttl>0}_pc(){}}class b extends v{init({width:t=0,height:i=0,context:e=p(),render:s=this.draw,update:h=this.advance,children:a=[],anchor:n={x:0,y:0},opacity:r=1,rotation:o=0,drotation:d=0,ddrotation:l=0,scaleX:c=1,scaleY:x=1,...u}={}){this._c=[],super.init({width:t,height:i,context:e,anchor:n,opacity:r,rotation:o,drotation:d,ddrotation:l,scaleX:c,scaleY:x,...u}),this._di=!0,this._uw(),this.addChild(a),this._rf=s,this._uf=h,y("init",(()=>{this.context??=p()}))}update(t){this._uf(t),this.children.map((i=>i.update&&i.update(t)))}render(){let t=this.context;t.save(),(this.x||this.y)&&t.translate(this.x,this.y),this.rotation&&t.rotate(this.rotation),1==this.scaleX&&1==this.scaleY||t.scale(this.scaleX,this.scaleY);let i=this.width,e=this.height;this.radius&&(i=e=2*this.radius);let s=-i*this.anchor.x,h=-e*this.anchor.y;(s||h)&&t.translate(s,h),this.context.globalAlpha=this.opacity,this._rf(),(s||h)&&t.translate(-s,-h),this.children.map((t=>t.render&&t.render())),t.restore()}draw(){}_pc(){this._uw(),this.children.map((t=>t._pc()))}get x(){return this.position.x}get y(){return this.position.y}set x(t){this.position.x=t,this._pc()}set y(t){this.position.y=t,this._pc()}get width(){return this._w}set width(t){this._w=t,this._pc()}get height(){return this._h}set height(t){this._h=t,this._pc()}_uw(){if(!this._di)return;let{_wx:t=0,_wy:i=0,_wo:e=1,_wrot:s=0,_wsx:h=1,_wsy:a=1}=this.parent||{};this._wx=this.x,this._wy=this.y,this._ww=this.width,this._wh=this.height,this.radius&&(this._wrx=this.radius,this._wry=this.radius),this._wo=e*this.opacity,this._wsx=h*this.scaleX,this._wsy=a*this.scaleY,this._wx=this._wx*h,this._wy=this._wy*a,this._ww=this.width*this._wsx,this._wh=this.height*this._wsy,this.radius&&(this._wrx=this.radius*this._wsx,this._wry=this.radius*this._wsy),this._wrot=s+this.rotation;let{x:n,y:r}=function(t,i){let e=Math.sin(i),s=Math.cos(i);return{x:t.x*s-t.y*e,y:t.x*e+t.y*s}}({x:this._wx,y:this._wy},s);this._wx=n,this._wy=r,this._wx+=t,this._wy+=i}get world(){return{x:this._wx,y:this._wy,width:this._ww,height:this._wh,radius:this.radius?{x:this._wrx,y:this._wry}:void 0,opacity:this._wo,rotation:this._wrot,scaleX:this._wsx,scaleY:this._wsy}}set children(t){this.removeChild(this._c),this.addChild(t)}get children(){return this._c}addChild(...t){t.flat().map((t=>{this.children.push(t),t.parent=this,t._pc=t._pc||h,t._pc()}))}removeChild(...t){t.flat().map((t=>{r(this.children,t)&&(t.parent=null,t._pc())}))}get radius(){return this._r}set radius(t){this._r=t,this._pc()}get opacity(){return this._opa}set opacity(t){this._opa=i(0,1,t),this._pc()}get rotation(){return this._rot}set rotation(t){this._rot=t,this._pc()}advance(t){super.advance(t),this.drotation+=this.ddrotation,this.rotation+=this.drotation}setScale(t,i=t){this.scaleX=t,this.scaleY=i}get scaleX(){return this._scx}set scaleX(t){this._scx=t,this._pc()}get scaleY(){return this._scy}set scaleY(t){this._scy=t,this._pc()}}class S extends b{init({image:t,width:i=(t?t.width:void 0),height:e=(t?t.height:void 0),...s}={}){super.init({image:t,width:i,height:e,...s})}get animations(){return this._a}set animations(t){let i,e;for(i in this._a={},t)this._a[i]=t[i].clone(),e=e||this._a[i];this.currentAnimation=e,this.width=this.width||e.width,this.height=this.height||e.height}playAnimation(t){this.currentAnimation?.stop(),this.currentAnimation=this.animations[t],this.currentAnimation.start()}advance(t){super.advance(t),this.currentAnimation?.update(t)}draw(){if(this.image&&this.context.drawImage(this.image,0,0,this.image.width,this.image.height),this.currentAnimation&&this.currentAnimation.render({x:0,y:0,width:this.width,height:this.height,context:this.context}),this.color){if(this.context.fillStyle=this.color,this.radius)return this.context.beginPath(),this.context.arc(this.radius,this.radius,this.radius,0,2*Math.PI),void this.context.fill();this.context.fillRect(0,0,this.width,this.height)}}}function E(){return new S(...arguments)}let L=new WeakMap,M={},A={},C={0:"left",1:"middle",2:"right"};function D(t,i){return parseFloat(t.getPropertyValue(i))||0}function R(t){let i=null!=t.button?C[t.button]:"left";A[i]=!0,F(t,"onDown")}function j(t){let i=null!=t.button?C[t.button]:"left";A[i]=!1,F(t,"onUp")}function P(t){F(t,"onOver")}function Y(t){L.get(t.target)._oo=null,A={}}function I(t,i,e){let s=function(t){let i=t._lf.length?t._lf:t._cf;for(let e=i.length-1;e>=0;e--){let s=i[e];if(s.collidesWithPointer?s.collidesWithPointer(t):o(t,s))return s}}(t);s&&s[i]&&s[i](e),M[i]&&M[i](e,s),"onOver"==i&&(s!=t._oo&&t._oo&&t._oo.onOut&&t._oo.onOut(e),t._oo=s)}function F(t,i){t.preventDefault();let e=t.target,s=L.get(e),{scaleX:h,scaleY:a,offsetX:n,offsetY:r}=function(t){let{canvas:i,_s:e}=t,s=i.getBoundingClientRect(),h="none"!=e.transform?e.transform.replace("matrix(","").split(","):[1,1,1,1],a=parseFloat(h[0]),n=parseFloat(h[3]),r=(D(e,"border-left-width")+D(e,"border-right-width"))*a,o=(D(e,"border-top-width")+D(e,"border-bottom-width"))*n,d=(D(e,"padding-left")+D(e,"padding-right"))*a,l=(D(e,"padding-top")+D(e,"padding-bottom"))*n;return{scaleX:(s.width-r-d)/i.width,scaleY:(s.height-o-l)/i.height,offsetX:s.left+(D(e,"border-left-width")+D(e,"padding-left"))*a,offsetY:s.top+(D(e,"border-top-width")+D(e,"padding-top"))*n}}(s);t.type.includes("touch")?(Array.from(t.touches).map((({clientX:t,clientY:i,identifier:e})=>{let o=s.touches[e];o||(o=s.touches[e]={start:{x:(t-n)/h,y:(i-r)/a}},s.touches.length++),o.changed=!1})),Array.from(t.changedTouches).map((({clientX:e,clientY:o,identifier:d})=>{let l=s.touches[d];l.changed=!0,l.x=s.x=(e-n)/h,l.y=s.y=(o-r)/a,I(s,i,t),x("touchChanged",t,s.touches),"onUp"==i&&(delete s.touches[d],s.touches.length--,s.touches.length||x("touchEnd"))}))):(s.x=(t.clientX-n)/h,s.y=(t.clientY-r)/a,I(s,i,t))}function O(t){let i=t.canvas;t.clearRect(0,0,i.width,i.height)}let B={},X={},T={},W={Enter:"enter",Escape:"esc",Space:"space",ArrowLeft:"arrowleft",ArrowUp:"arrowup",ArrowRight:"arrowright",ArrowDown:"arrowdown"};function k(t=h,i){t._pd&&i.preventDefault(),t(i)}function q(t){let i=W[t.code],e=B[i];T[i]=!0,k(e,t)}function H(t){let i=W[t.code],e=X[i];T[i]=!1,k(e,t)}function U(){T={}}function $(t){return!![].concat(t).some((t=>T[t]))}function z(t){let i=[];return t._dn?i.push(t._dn):t.children&&t.children.map((t=>{i=i.concat(z(t))})),i}class G{constructor({id:t,name:i=t,objects:s=[],context:h=p(),cullObjects:a=!0,cullFunction:r=e,sortFunction:o,...d}){this._o=[],Object.assign(this,{id:t,name:i,context:h,cullObjects:a,cullFunction:r,sortFunction:o,...d});let l=this._dn=document.createElement("section");l.tabIndex=-1,l.style="position:absolute;width:1px;height:1px;overflow:hidden;clip:rect(0,0,0,0);",l.id=t,l.setAttribute("aria-label",i);let c=this;this.camera=new class extends b{set x(t){c.sx=t-this.centerX,super.x=t}get x(){return super.x}set y(t){c.sy=t-this.centerY,super.y=t}get y(){return super.y}}({context:h,anchor:{x:.5,y:.5},render:this._rf.bind(this)}),this.add(s),this._i=()=>{this.context??=p();let t=this.context.canvas,{width:i,height:e}=t,s=i/2,h=e/2;Object.assign(this.camera,{centerX:s,centerY:h,x:s,y:h,width:i,height:e}),l.isConnected||n(l,t)},this.context&&this._i(),y("init",this._i)}set objects(t){this.remove(this._o),this.add(t)}get objects(){return this._o}get node(){return this._dn}add(...t){t.flat().map((t=>{this._o.push(t),t.parent=this,this._dn.append(...z(t))}))}remove(...t){t.flat().map((t=>{r(this._o,t),t.parent=null,z(t).map((t=>{n(t,this.context.canvas)}))}))}show(){this.hidden=this._dn.hidden=!1;let t=this._o.find((t=>t.focus));t?t.focus(a):this._dn.focus(a),this.onShow()}hide(){this.hidden=this._dn.hidden=!0,this.onHide()}destroy(){var t,i;t="init",i=this._i,c[t]=(c[t]||[]).filter((t=>t!=i)),this._dn.remove(),this._o.map((t=>t.destroy&&t.destroy()))}lookAt(t){let{x:i,y:e}=t.world||t;this.camera.x=i,this.camera.y=e}update(t){this.hidden||this._o.map((i=>i.update&&i.update(t)))}_rf(){let{_o:t,context:i,_sx:e,_sy:s,camera:h,sortFunction:a,cullObjects:n,cullFunction:r}=this;i.translate(e,s);let o=t;n&&(o=o.filter((t=>r(h,t)))),a&&o.sort(a),o.map((t=>t.render&&t.render()))}render(){if(!this.hidden){let{context:t,camera:i}=this,{x:e,y:s,centerX:h,centerY:a}=i;t.save(),this._sx=h-e,this._sy=a-s,t.translate(this._sx,this._sy),i.render(),t.restore()}}onShow(){}onHide(){}}function N(t){if(+t==t)return t;let i=[],e=t.split(".."),s=+e[0],h=+e[1],a=s;if(s<h)for(;a<=h;a++)i.push(a);else for(;a>=h;a--)i.push(a);return i}class V{constructor({image:t,frameWidth:i,frameHeight:e,spacing:s=0,margin:h=0,animations:a}={}){if(!t)throw Error("You must provide an Image for the SpriteSheet");this.animations={},this.image=t,this.frame={width:i,height:e,spacing:s,margin:h},this._f=(t.width-h)/i|0,this.createAnimations(a)}createAnimations(t){let i,e;for(e in t){let{frames:s,frameRate:h,loop:a}=t[e];if(i=[],null==s)throw Error("Animation "+e+" must provide a frames property");[].concat(s).map((t=>{i=i.concat(N(t))})),this.animations[e]=f({spriteSheet:this,frames:i,frameRate:h,loop:a,name:e})}}}function K(){return new V(...arguments)}let J,Q;function Z(t,i){return t/i|0}function tt(t,i){return t/i|0}class it{constructor(t={}){let{width:i,height:e,tilewidth:s,tileheight:h,tilesets:a}=t,n=i*s,r=e*h,o=document.createElement("canvas");o.width=n,o.height=r,this._c=o,this._ctx=o.getContext("2d"),a.map((i=>{let{__k:e,location:s}=window,h=(e?e.dm.get(t):"")||s.href,{source:a}=i;if(a){if(!e)throw Error('You must use "load" or "loadData" to resolve tileset.source');let t=e.d[e.u(a,h)];if(!t)throw Error(`You must load the tileset source "${a}" before loading the tileset`);Object.keys(t).map((e=>{i[e]=t[e]}))}let{image:n}=i;if(""+n===n){if(!e)throw Error('You must use "load" or "loadImage" to resolve tileset.image');let t=e.i[e.u(n,h)];if(!t)throw Error(`You must load the image "${n}" before loading the tileset`);i.image=t}})),Object.assign(this,{context:p(),layerMap:{},layerCanvases:{},mapwidth:n,mapheight:r,_sx:0,_sy:0,_o:[],...t}),this.context&&this._p(),y("init",(()=>{this.context??=p(),this._p()}))}get sx(){return this._sx}get sy(){return this._sy}set sx(t){let e=Math.max(0,this.mapwidth-m().width);this._sx=i(0,e,t)}set sy(t){let e=Math.max(0,this.mapheight-m().height);this._sy=i(0,e,t)}set objects(t){this.remove(this._o),this.add(t)}get objects(){return this._o}add(...t){t.flat().map((t=>{this._o.push(t),t.parent=this}))}remove(...t){t.flat().map((t=>{r(this._o,t),t.parent=null}))}getPosition(t){let i=m().getBoundingClientRect(),e=t.x-i.x,s=t.y-i.y;return e+=this.sx,s+=this.sy,{x:e,y:s,row:Z(s,this.tileheight),col:tt(e,this.tilewidth)}}setTileAtLayer(t,i,e){let{layerMap:s,tileheight:h,tilewidth:a,width:n}=this,{row:r,col:o,x:d,y:l}=i,c=r??Z(l,h),y=o??tt(d,a);s[t]&&(this._d=!0,s[t]._d=!0,s[t].data[c*n+y]=e)}setLayer(t,i){let{layerMap:e}=this;e[t]&&(this._d=!0,e[t]._d=!0,e[t].data=i)}layerCollidesWith(t,i){let{tilewidth:e,tileheight:h,layerMap:a}=this,{x:n,y:r,width:o,height:d}=s(i),l=Z(r,h),c=tt(n,e),y=Z(r+d,h),x=tt(n+o,e),u=a[t];for(let t=l;t<=y;t++)for(let i=c;i<=x;i++)if(u.data[i+t*this.width])return!0;return!1}tileAtLayer(t,i){let{layerMap:e,tileheight:s,tilewidth:h,width:a}=this,{row:n,col:r,x:o,y:d}=i,l=n??Z(d,s),c=r??tt(o,h);return e[t]?e[t].data[l*a+c]:-1}render(t=this._c,i=!0){let{_d:e,context:s,sx:h=0,sy:a=0}=this;e&&this._p();let{width:n,height:r}=m(),o=Math.min(t.width,n),d=Math.min(t.height,r);s.drawImage(t,h,a,o,d,0,0,o,d),i&&(s.save(),(h||a)&&s.translate(-h,-a),this.objects.map((t=>t.render&&t.render())),s.restore())}renderLayer(t){let{layerCanvases:i,layerMap:e}=this,s=e[t],h=i[t],a=h?.getContext("2d");if(!h){let{mapwidth:e,mapheight:n}=this;h=document.createElement("canvas"),a=h.getContext("2d"),h.width=e,h.height=n,i[t]=h,this._rl(s,a)}s._d&&(s._d=!1,a.clearRect(0,0,h.width,h.height),this._rl(s,a)),this.render(h,!1)}_p(){let{_ctx:t,layers:i=[],layerMap:e}=this;this._d=!1,i.map((i=>{let{name:s,data:h,visible:a}=i;i._d=!1,e[s]=i,h&&0!=a&&this._rl(i,t)}))}_rl(t,i){let{opacity:e,data:s=[]}=t,{tilesets:h,width:a,tilewidth:n,tileheight:r}=this;i.save(),i.globalAlpha=e,s.map(((t,e)=>{if(!t)return;let s,o=0,d=0,l=2147483648&t,c=1073741824&t,y=0,x=0,u=0,m=0,p=0;o=l||c,p=536870912&(t&=1073741823),p&&(l&&c?u=1:l?y=1:c?x=1:m=1,d=y||x||u||m,t&=-536870913);for(let i=h.length-1;i>=0&&(s=h[i],!(t/s.firstgid>=1));i--);let{image:g,spacing:f=0,margin:w=0,firstgid:_,columns:v}=s,b=t-_,S=v??g.width/(n+f)|0,E=e%a*n,L=(e/a|0)*r,M=w+b%S*(n+f),A=w+(b/S|0)*(r+f);d?(i.save(),i.translate(E+n/2,L+r/2),x||m?i.rotate(-Math.PI/2):(y||u)&&i.rotate(Math.PI/2),(u||m)&&i.scale(-1,1),E=-n/2,L=-r/2):o&&(i.save(),i.translate(E+(l?n:0),L+(c?r:0)),i.scale(l?-1:1,c?-1:1),E=o?0:E,L=o?0:L),i.drawImage(g,M,A,n,r,E,L,n,r),(o||d)&&i.restore()})),i.restore()}}function et(){const{windowWidth:t,windowHeight:i}={windowWidth:window.innerWidth,windowHeight:window.innerHeight},e=1280/720;t/i<=e?(J.style.width=`${t}px`,J.style.height=t/e+"px"):(J.style.height=`${i}px`,J.style.width=i*e+"px")}const st=t.p+"2ba90ed9a8a448240e34.png",ht=t.p+"cab33981a0a9ebc71aa7.png",at=t.p+"07e70d276b75c6509d5a.png";function nt(t){return new Promise((i=>{const e=new Image;e.src=t,e.onload=function(){i(this)}}))}function rt(t,i){return Math.atan2(i.y-t.y,i.x-t.x)}function ot(t,i){const e=t[0].x,s=t[0].y,h=t[1].x,a=t[1].y,n=i[0].x,r=i[0].y,o=i[1].x,d=i[1].y;if(e===h&&s===a||n===o&&r===d)return!1;const l=(d-r)*(h-e)-(o-n)*(a-s);if(0===l)return!1;const c=((o-n)*(s-r)-(d-r)*(e-n))/l,y=((h-e)*(s-r)-(a-s)*(e-n))/l;return!(c<0||c>1||y<0||y>1)&&{x:e+c*(h-e),y:s+c*(a-s),dist:c}}class dt{constructor(t){this.mapData=t.levelData,this.tileEngine=t.tileEngine;const i=t.tileEngine.tilewidth*t.tileEngine.width,e=t.tileEngine.tileheight*t.tileEngine.height;this.fixedPoints=[{x:0,y:0},{x:i,y:0},{x:0,y:e},{x:i,y:e}],this.fixedLines=[],this.points=[],this.lines=[];const s=this.getLayerData("light");this.getHorizontalsFromLayer(s),this.getVerticalsFromLayer(s)}getLayerData(t){return this.mapData.layers.filter((i=>i.name==t))[0].data}addPoint(t){this.fixedPoints.includes(t)||this.fixedPoints.push(t)}addLine(t){this.fixedLines.push(t)}getBoxPoints(t,i,e,s){return{topLeft:{x:t,y:e},topRight:{x:i,y:e},bottomRight:{x:i,y:s},bottomLeft:{x:t,y:s}}}addBox(t,i,e,s){const h=this.getBoxPoints(t,i,e,s),a=[[h.topLeft,h.topRight],[h.topRight,h.bottomRight],[h.bottomRight,h.bottomLeft],[h.bottomLeft,h.topLeft]];this.fixedLines.push(...a);for(const t in h)this.addPoint(h[t])}getHorizontalsFromLayer(t){let i,e;return t.forEach(((s,h)=>{const a=Math.floor(h/this.mapData.width),n=h%this.mapData.width;if(0==s||null!=i||t[h+this.mapData.width]||t[h-this.mapData.width]||(i=n*this.mapData.tilewidth),null!=i&&(t[h+this.mapData.width]||t[h-this.mapData.width])){const t=n*this.mapData.tilewidth,i=t+this.mapData.tilewidth,e=a*this.mapData.tileheight,s=e+this.mapData.tileheight,h=this.getBoxPoints(t,i,e,s);for(const t in h)this.addPoint(h[t])}if(null!=i&&(0==t[h+1]||(h+1)%this.mapData.width==0)){e=n*this.mapData.tilewidth+this.mapData.tilewidth;const t=a*this.mapData.tileheight,s=t+this.mapData.tileheight;this.addBox(i,e,t,s),i=void 0,e=void 0}})),[]}getVerticalsFromLayer(t){let i,e;const s=function(t,i,e){const s=[];for(let h=0;h<e;h++)s.push(t.slice(h*i,h*i+i));return s}(t,this.mapData.width,this.mapData.height);let h=0,a=0,n=!1;for(let r=0;r<t.length;r++)if(h=r%this.mapData.height,0==h&&1==n&&a++,n=!0,0!=s[h][a]&&null==i&&s[h+1]&&0!=s[h+1][a]&&(i=h*this.mapData.tileheight),null!=i&&(!s[h+1]||0==s[h+1][a])){e=h*this.mapData.tileheight+this.mapData.tileheight;const t=a*this.mapData.tilewidth,s=t+this.mapData.tilewidth;this.addBox(t,s,i,e),i=void 0,e=void 0}return[]}update(){this.points=this.fixedPoints.map((t=>({x:t.x-this.tileEngine.sx,y:t.y-this.tileEngine.sy}))),this.lines=this.fixedLines.map((t=>{const i=[];for(const e of t)i.push({x:e.x-this.tileEngine.sx,y:e.y-this.tileEngine.sy});return i}))}}class lt{constructor(t){this.ctx=t.context,this.parent=t.entity,this.wireframe=t.wireframe,this.tileEngine=t.tileEngine,this.sourceColor="rgba(255, 255, 255, 0.1)",this.distanceColor="rgba(255, 255, 255, 0)",this.minShadowColor="rgba(0, 0, 0, 0)",this.maxShadowColor="rgba(0, 0, 0, 0.85)",this.minFalloff=.04*this.ctx.canvas.width,this.maxFalloff=.33*this.ctx.canvas.width,this.origin={x:this.parent.x+this.parent.width/2-this.tileEngine.sx,y:this.parent.y+this.parent.height-15-this.tileEngine.sy},this.rayEndpoints=[]}getAdjacentRays(t){const i=this.ctx.canvas.width,e=t+1e-5,s=t-1e-5;return[[this.origin,{x:this.origin.x+i*Math.cos(e),y:this.origin.y+i*Math.sin(e),angle:e}],[this.origin,{x:this.origin.x+i*Math.cos(s),y:this.origin.y+i*Math.sin(s),angle:s}]]}createRays(){const t=[];for(const i of this.wireframe.points){const e=rt(this.origin,i);let s=this.getAdjacentRays(e);const h=[[this.origin,{x:i.x,y:i.y,angle:e}],...s];for(let i of h){let e={x:i[1].x,y:i[1].y,dist:2};for(const t of this.wireframe.lines){const s=ot(i,t);s&&s.dist<e.dist&&(e=s)}const s={x:e.x,y:e.y,angle:i[1].angle};t.push([this.origin,s]),this.rayEndpoints.push(s)}}return t}drawLine(t){this.ctx.beginPath(),this.ctx.strokeStyle="green",this.ctx.moveTo(t[0].x,t[0].y),this.ctx.lineTo(t[1].x,t[1].y),this.ctx.stroke()}lightGradient(){const t=this.origin.x,i=this.origin.y,e=this.minFalloff,s=this.maxFalloff,h=this.ctx.createRadialGradient(t,i,e,t,i,s);return h.addColorStop(0,this.sourceColor),h.addColorStop(1,this.distanceColor),h}drawPolygon(t){this.ctx.fillStyle=this.lightGradient(),this.ctx.beginPath(),t.forEach(((t,i)=>{0==i?this.ctx.moveTo(t.x,t.y):this.ctx.lineTo(t.x,t.y)})),this.ctx.closePath(),this.ctx.fill()}shadowGradient(){const t=this.origin.x,i=this.origin.y,e=this.minFalloff,s=this.maxFalloff+.32*this.ctx.canvas.width,h=this.ctx.createRadialGradient(t,i,e,t,i,s);return h.addColorStop(0,this.minShadowColor),h.addColorStop(1,this.maxShadowColor),h}drawShadow(){this.ctx.fillStyle=this.shadowGradient(),this.ctx.fillRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}update(){this.origin={x:this.parent.x+this.parent.width/2-this.tileEngine.sx,y:this.parent.y+this.parent.height-15-this.tileEngine.sy},this.rayEndpoints=[],this.createRays(),this.rayEndpoints.sort(((t,i)=>t.angle-i.angle))}render(){this.drawShadow(),this.drawPolygon(this.rayEndpoints)}}function ct(t,i,e,s,h,a){const n=i.tilewidth*i.width,r=i.tileheight*i.height,o=K({image:s,frameWidth:32,frameHeight:32,animations:{idle:{frames:"0..3",frameRate:4},run:{frames:"4..9",frameRate:4}}}),d=E({type:"player",x:h.x,y:h.y,dx:0,dy:0,height:32,width:32,maxSpeed:1,ammo:a,ableToShoot:!0,cameraDeadzone:.6,cameraLastMove:{dx:0,dy:0},animations:o.animations,handleCollision(){this.x-=this.dx,this.y-=this.dy,i.sx-=this.cameraLastMove.dx,i.sy-=this.cameraLastMove.dy},update(){const s={x:this.x+this.width/2,y:this.y+this.height/2};if(A["left"]&&this.ableToShoot&&this.ammo>0){const e=t.hudObjects.findLast((t=>"ammo"==t.type));!function(t,i){let e=t.indexOf(i);-1!=e&&t.splice(e,1)}(t.hudObjects,e),this.ammo-=1,this.ableToShoot=!1;const h=function(t=m()){return L.get(t)}();h.x+=i.sx,h.y+=i.sy;const a=rt(s,h);t.add(function(t,i,e){return E({type:"bullet",x:t-2,y:i-2,dx:10*Math.cos(e),dy:10*Math.sin(e),height:4,width:4,color:"yellow",ttl:100,handleCollision(){this.ttl=0},update(){this.advance()}})}(this.x+this.width/2,this.y+this.height/2,a))}$("a")||$("d")||$("s")||$("w")?"run"!=this.currentAnimation&&this.playAnimation("run"):"idle"!=this.currentAnimation&&this.playAnimation("idle");const h=e.width*this.cameraDeadzone,a=e.height*this.cameraDeadzone;$("a")?(this.dx=-this.maxSpeed,s.x<n-h&&s.x-i.sx<e.width-h&&!i.sx<=0?(i.sx-=this.maxSpeed,this.cameraLastMove.dx=-this.maxSpeed):this.cameraLastMove.dx=0):$("d")?(this.dx=this.maxSpeed,s.x>h&&s.x-i.sx>h&&!(i.sx+e.width>=n)?(i.sx+=this.maxSpeed,this.cameraLastMove.dx=this.maxSpeed):this.cameraLastMove.dx=0):(this.dx=0,this.cameraLastMove.dx=0),$("s")?(this.dy=this.maxSpeed,s.y>a&&s.y-i.sy>a&&!(i.sy+e.height>=r)?(i.sy+=this.maxSpeed,this.cameraLastMove.dy=this.maxSpeed):this.cameraLastMove.dy=0):$("w")?(this.dy=-this.maxSpeed,s.y<r-a&&s.y-i.sy<e.height-a&&!i.sy<=0?(i.sy-=this.maxSpeed,this.cameraLastMove.dy=-this.maxSpeed):this.cameraLastMove.dy=0):(this.dy=0,this.cameraLastMove.dy=0),this.advance(),this.collisionBox.x=this.x+4,this.collisionBox.y=this.y+16}});return function(t,i){let e=t[0].toUpperCase()+t.substr(1);M["on"+e]=i}("up",(function(){d.ableToShoot=!0})),d.collisionBox={x:d.x+4,y:d.y+16,width:24,height:16},d}function yt(t){const i=K({image:t.enemySheet,frameWidth:32,frameHeight:32,animations:{idle:{frames:"0..3",frameRate:4},run:{frames:"4..9",frameRate:4}}}),e=E({type:"enemy",x:t.spawn.x,y:t.spawn.y,height:32,width:32,hidden:!0,speed:1.5,range:100,tileEngine:t.tileEngine,animations:i.animations,setRandomDirection(){this.dx=3*Math.random()-1.5,this.dy=3*Math.random()-1.5},handleCollision(){this.x-=this.dx,this.y-=this.dy},update(){const i={x:t.player.x+t.player.width/2-this.tileEngine.sx,y:t.player.y+t.player.height-15-this.tileEngine.sy},e={x:this.x+this.width/2-this.tileEngine.sx,y:this.y+this.height/2-this.tileEngine.sy},s=[i,e];for(const i of t.wireframe.lines){if(ot(s,i)){this.hidden=!0;break}this.hidden=!1}if(!this.hidden&&function(t,i){const e=i.x-t.x,s=i.y-t.y;return Math.sqrt(e*e+s*s)}(e,i)<=this.range){const t=rt(e,i);this.dx=Math.cos(t)*this.speed,this.dy=Math.sin(t)*this.speed}else this.dx=0,this.dy=0;this.dx||this.dy?"run"!=this.currentAnimation&&this.playAnimation("run"):"idle"!=this.currentAnimation&&this.playAnimation("idle"),this.advance(),this.collisionBox.x=this.x+4,this.collisionBox.y=this.y+16},render(){this.hidden||this.draw()}});return e.collisionBox={x:t.spawn.x+4,y:t.spawn.y+16,width:24,height:16},e}function xt(t){const i=K({image:t.tileSheet,frameWidth:16,frameHeight:32,animations:{disarmed:{frames:"10",frameRate:4},armed:{frames:"11",frameRate:4},triggered:{frames:"12",frameRate:4}}}),e=E({type:"trap",x:t.x,y:t.y,height:32,width:16,state:"disarmed",armedStart:2,triggeredStart:2.75,tridderedEnd:3.5,animations:i.animations,dt:0,update(t){this.dt+=t,this.dt<this.armedStart?this.state="disarmed":this.armedStart<=this.dt&&this.dt<this.triggeredStart?this.state="armed":this.triggeredStart<=this.dt&&this.dt<this.tridderedEnd?this.state="triggered":this.dt>=this.tridderedEnd&&(this.dt=0),this.playAnimation(this.state),this.advance()}});return e.collisionBox={x:t.x,y:t.y+e.height-23,width:16,height:23},e}const ut=[{canvasWidth:480,canvasHeight:270,tilewidth:16,tileheight:16,width:30,height:30,player:{x:60,y:400},enemies:[{x:48,y:80},{x:400,y:88},{x:160,y:224},{x:416,y:336}],traps:[{x:48,y:192},{x:64,y:192},{x:80,y:192},{x:48,y:304},{x:64,y:304},{x:80,y:304}],stairs:{x:432,y:432,width:32,height:32},sx:0,sy:210,layers:[{name:"foreground",data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{name:"ground",data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,6,6,6,6,6,7,0,0,0,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,0,30,31,31,31,31,31,31,58,6,6,6,60,178,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,179,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,176,131,132,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,201,156,157,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,30,31,31,31,31,178,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,30,31,31,31,179,31,31,32,0,0,55,56,10,31,8,56,56,56,10,31,31,31,31,31,31,31,58,6,6,6,60,31,31,31,8,56,56,57,0,0,0,34,30,31,32,34,0,34,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,34,0,0,0,0,0,0,30,31,32,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,30,31,31,31,31,31,31,31,32,0,0,0,30,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,30,178,31,31,31,31,31,31,32,0,0,0,30,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,55,56,56,10,31,31,31,31,58,6,6,6,60,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,0,0,34,30,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,30,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,30,31,31,31,58,6,6,7,0,0,0,0,30,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,30,31,31,31,203,31,31,32,0,0,0,0,30,31,32,0,0,0,0,0,0,30,31,31,31,31,58,6,6,6,60,31,31,31,31,178,31,32,0,0,5,6,60,179,58,6,7,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,176,177,31,31,31,32,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,201,202,31,31,31,32,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,203,31,31,31,31,32,0,0,0,0,0,0,0,31,31,31,31,31,31,31,31,31,31,176,177,56,57,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,31,31,31,31,31,31,31,203,201,202,83,83,0,0,55,56,56,56,56,56,57,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,107,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{name:"collision",data:[104,2,2,2,2,2,2,2,2,105,0,104,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,105,129,26,27,27,27,27,27,27,28,101,2,103,26,27,27,27,27,27,27,28,29,26,27,27,27,27,27,27,28,130,129,51,52,52,52,52,52,52,53,126,27,128,51,52,52,52,52,52,52,53,54,51,52,52,52,52,52,52,53,130,129,0,0,0,0,0,0,0,0,151,152,153,0,0,0,0,0,0,0,0,79,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,27,128,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,52,153,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,154,77,78,0,0,0,76,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,77,155,0,0,129,0,0,0,130,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,129,0,0,0,130,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,129,0,0,0,130,0,129,0,0,0,0,0,0,0,0,0,126,27,128,0,0,0,0,0,130,0,0,0,0,0,129,0,0,0,130,0,129,0,0,0,0,0,0,0,0,0,151,52,153,0,0,0,0,0,130,0,0,0,0,0,129,0,0,0,130,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,129,0,0,0,130,0,154,77,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,2,105,0,0,129,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,27,28,130,0,0,129,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,152,53,130,104,2,103,0,0,0,101,2,105,0,0,129,0,0,0,0,0,0,126,27,128,0,0,0,0,0,0,0,0,130,129,26,128,0,0,0,126,28,130,0,0,129,0,0,0,0,0,0,151,52,153,0,0,0,0,0,0,0,0,130,129,51,153,0,0,0,151,53,130,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,130,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,130,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,130,0,0,129,106,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,130,0,0,129,0,0,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,130,0,0,129,0,0,0,107,106,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,130,0,0,129,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0,130,154,77,77,77,77,77,77,77,155,0,0,154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,155]},{name:"light",visible:!1,data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}]},{canvasWidth:480,canvasHeight:270,tilewidth:16,tileheight:16,width:80,height:50,player:{x:48,y:72},enemies:[{x:60,y:240},{x:224,y:208},{x:96,y:640},{x:720,y:640},{x:528,y:368},{x:720,y:240},{x:528,y:96},{x:1184,y:80},{x:992,y:704},{x:992,y:400},{x:1200,y:624},{x:1200,y:270},{x:1200,y:460}],traps:[{x:112,y:352},{x:128,y:352},{x:144,y:352},{x:160,y:352},{x:176,y:352},{x:192,y:352},{x:112,y:432},{x:128,y:432},{x:144,y:432},{x:160,y:432},{x:176,y:432},{x:192,y:432},{x:344,y:576},{x:344,y:592},{x:344,y:608},{x:344,y:624},{x:344,y:640},{x:344,y:656},{x:440,y:576},{x:440,y:592},{x:440,y:608},{x:440,y:624},{x:440,y:640},{x:440,y:656},{x:960,y:176},{x:976,y:176},{x:992,y:176},{x:1008,y:176},{x:1024,y:176},{x:1040,y:176},{x:1056,y:176},{x:960,y:256},{x:976,y:256},{x:992,y:256},{x:1008,y:256},{x:1024,y:256},{x:1040,y:256},{x:1056,y:256},{x:960,y:336},{x:976,y:336},{x:992,y:336},{x:1008,y:336},{x:1024,y:336},{x:1040,y:336},{x:1056,y:336},{x:960,y:496},{x:976,y:496},{x:992,y:496},{x:1008,y:496},{x:1024,y:496},{x:1040,y:496},{x:1056,y:496},{x:960,y:576},{x:976,y:576},{x:992,y:576},{x:1008,y:576},{x:1024,y:576},{x:1040,y:576},{x:1056,y:576}],stairs:{x:1232,y:752,width:32,height:32},sx:0,sy:0,layers:[{name:"foreground",data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{name:"ground",data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,0,0,0,0,0,0,0,0,0,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,31,131,132,177,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,176,131,132,31,32,0,0,30,31,156,157,202,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,201,156,157,31,32,0,0,30,31,31,203,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,8,31,31,31,31,10,31,31,31,31,31,31,8,56,56,56,56,56,56,56,56,56,56,10,31,31,31,31,31,8,56,56,56,56,56,56,10,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,34,0,0,0,0,0,0,0,0,34,30,31,31,31,31,31,32,34,0,0,0,0,34,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,58,6,6,6,6,60,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,176,177,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,201,202,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,179,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,178,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,55,56,56,56,56,56,10,31,31,31,31,8,56,56,56,56,56,56,57,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,8,31,31,31,31,10,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,34,30,31,31,31,31,32,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,58,6,6,6,6,60,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,176,177,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,201,202,31,179,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,203,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,8,31,31,31,31,10,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,30,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,5,6,6,6,6,6,60,31,31,31,31,58,6,6,6,6,6,6,7,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,58,6,6,6,6,60,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,176,131,132,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,201,156,157,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,178,31,31,31,31,31,31,31,31,31,31,31,31,31,31,58,6,6,6,6,6,6,6,6,6,6,60,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,179,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,8,31,31,31,31,10,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,32,0,0,0,0,0,0,30,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,58,6,6,6,6,6,6,60,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,33,0,0,0,0,35,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,203,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,8,56,56,56,56,56,56,56,56,56,56,10,31,31,31,31,31,31,58,6,6,6,6,60,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,176,177,31,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,34,0,0,0,0,0,0,0,0,34,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,201,202,31,31,31,31,31,32,0,0,30,31,31,131,132,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,31,31,156,157,31,31,31,31,31,31,31,31,31,31,203,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,131,132,31,31,31,31,31,31,31,203,31,176,131,132,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,131,132,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,178,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,156,157,31,31,31,31,31,31,31,31,31,201,156,157,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,156,157,31,31,31,31,31,31,31,31,31,31,31,31,31,56,57,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,178,31,31,31,32,0,0,0,0,0,0,0,0,0,0,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,83,83,0,0,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,0,0,0,0,0,0,0,0,0,0,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,0,0,0,0,0,0,0,0,0,0,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,108,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]},{name:"collision",data:[104,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,105,0,0,0,0,0,0,0,0,104,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,105,129,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,130,0,0,0,0,0,0,0,0,129,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,130,129,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,130,0,0,0,0,0,0,0,0,129,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,126,27,27,128,0,0,0,0,0,0,0,0,76,77,77,77,77,77,77,77,77,78,0,0,0,0,0,0,0,76,77,77,77,77,78,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,151,52,52,153,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,154,77,77,77,77,77,78,0,0,0,0,0,0,76,77,77,77,77,77,77,155,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,126,27,27,128,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,151,52,52,153,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,129,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,104,2,2,2,2,2,103,0,0,0,0,0,0,101,2,2,2,2,2,2,105,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,26,27,27,27,27,128,0,0,0,0,0,0,126,27,27,27,27,27,28,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,126,27,27,128,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,51,52,52,52,52,153,0,0,0,0,0,0,151,52,52,52,52,52,53,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,151,52,52,153,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,2,2,2,2,2,2,2,2,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,27,27,27,27,27,27,27,27,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,52,52,52,52,52,52,52,52,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,130,0,0,0,0,129,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,101,2,2,2,2,103,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,126,27,27,27,27,128,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,151,52,52,52,52,153,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,27,27,128,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,52,52,153,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,77,77,77,77,77,77,77,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,129,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,155,0,0,0,0,0,0,0,0,154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,155,0,0,0,0,0,0,0,0,154,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,155]},{name:"light",visible:!1,data:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}]}];class mt{constructor(t,i,e){this.canvas=t,this.context=i,this.tilesheetImg=e.tilesheetImg,this.playerImg=e.playerImg,this.enemyImg=e.enemyImg,this.playerAmmo=13,this.currentLevel=0,this.initLevel()}syncCameras(t,i){t.camera.x=i.sx+this.canvas.width/2,t.camera.y=i.sy+this.canvas.height/2}initLevel(){const t=function(){return new G(...arguments)}({id:`level${this.currentLevel}`,objects:[],hudObjects:[],removeDeadObjects(){const t=this.objects.filter((t=>!t.isAlive()));this.remove(t)},customUpdate(t){this.removeDeadObjects(),this.update(t)}}),i=ut[this.currentLevel];this.levelData=i;const e=(s=this.tilesheetImg,h=i,function(){return new it(...arguments)}({...h,tilesets:[{firstgid:1,image:s}]}));var s,h;this.syncCameras(t,e);for(const e of i.traps)t.add(xt({x:e.x,y:e.y,tileSheet:this.tilesheetImg}));const a=ct(t,e,this.canvas,this.playerImg,i.player,this.playerAmmo);t.add(a);const n=new dt({tileEngine:e,levelData:i}),r=new lt({context:this.context,entity:a,wireframe:n,tileEngine:e});for(const s of i.enemies)t.add(yt({spawn:s,player:a,wireframe:n,tileEngine:e,enemySheet:this.enemyImg}));for(let i=0;i<a.ammo;i++)t.hudObjects.push(E({type:"ammo",x:7*i+10,y:10,width:3,height:5,color:"yellow",render(){this.context.fillStyle=this.color,this.context.fillRect(0,0,this.width,this.height),this.context.beginPath(),this.context.moveTo(this.width/2,-this.width/2),this.context.lineTo(this.width,0),this.context.lineTo(0,0),this.context.fill()}}));this.scene=t,this.tileEngine=e,this.wireframe=n,this.light=r,this.player=a}nextLevel(t){t.stop(),this.playerAmmo=this.player.ammo,this.currentLevel+=1,this.scene.destroy(),ut[this.currentLevel]?(this.initLevel(),t.start()):function(){const t=document.querySelector("#gameWinScreen"),i=document.querySelector("#gameUi");t.classList.remove("hidden"),i.classList.add("hidden")}()}}const{canvas:pt,context:gt}=function(t,{contextless:i=!1}={}){if(d=document.getElementById(t)||t||document.querySelector("canvas"),i&&(d=d||new Proxy({},u)),!d)throw Error("You must provide a canvas element for the game");return l=d.getContext("2d")||new Proxy({},u),l.imageSmoothingEnabled=!1,x("init"),{canvas:d,context:l}}();J=document.querySelector("canvas"),window.addEventListener("resize",et),et(),function(){let t;for(t=0;t<26;t++)W["Key"+String.fromCharCode(t+65)]=String.fromCharCode(t+97);for(t=0;t<10;t++)W["Digit"+t]=W["Numpad"+t]=""+t;window.addEventListener("keydown",q),window.addEventListener("keyup",H),window.addEventListener("blur",U)}(),function({radius:t=5,canvas:i=m()}={}){let e=L.get(i);if(!e){let s=window.getComputedStyle(i);e={x:0,y:0,radius:t,touches:{length:0},canvas:i,_cf:[],_lf:[],_o:[],_oo:null,_s:s},L.set(i,e)}i.addEventListener("mousedown",R),i.addEventListener("touchstart",R),i.addEventListener("mouseup",j),i.addEventListener("touchend",j),i.addEventListener("touchcancel",j),i.addEventListener("blur",Y),i.addEventListener("mousemove",P),i.addEventListener("touchmove",P),e._t||(e._t=!0,y("tick",(()=>{e._lf.length=0,e._cf.map((t=>{e._lf.push(t)})),e._cf.length=0})))}(),window.onload=async()=>{const t=await async function(){return{tilesheetImg:await nt(st),playerImg:await nt(ht),enemyImg:await nt(at)}}(),i=new mt(pt,gt,t),s=function({fps:t=60,clearCanvas:i=!0,update:e=h,render:s,context:a=p(),blur:n=!1}={}){if(!s)throw Error("You must provide a render() function");let r,o,d,l,c,u=0,m=1e3/t,g=1/t,f=i?O:h,w=!0;function _(){if(o=requestAnimationFrame(_),w&&(d=performance.now(),l=d-r,r=d,!(l>1e3))){for(u+=l;u>=m;)x("tick"),c.update(g),u-=m;f(c.context),c.render()}}return n||(window.addEventListener("focus",(()=>{w=!0})),window.addEventListener("blur",(()=>{w=!1}))),y("init",(()=>{c.context??=p()})),c={update:e,render:s,isStopped:!0,context:a,start(){this.isStopped&&(r=performance.now(),this.isStopped=!1,requestAnimationFrame(_))},stop(){this.isStopped=!0,cancelAnimationFrame(o)},_frame:_,set _last(t){r=t}},c}({async update(t){i.scene.customUpdate(t);for(const t of i.scene.objects){if("player"==t.type&&e(t.collisionBox,i.levelData.stairs)&&i.nextLevel(s),"player"==t.type||"enemy"==t.type){let e;e=t.collisionBox?i.tileEngine.layerCollidesWith("collision",t.collisionBox):i.tileEngine.layerCollidesWith("collision",t),e&&t.handleCollision()}if(i.scene.camera.x=i.tileEngine.sx+pt.width/2,i.scene.camera.y=i.tileEngine.sy+pt.height/2,"trap"==t.type&&"triggered"==t.state&&e(i.player.collisionBox,t.collisionBox)&&(i.player.ttl=0),"enemy"==t.type)for(const s of i.scene.objects)"bullet"==s.type?e(t,s)&&(i.scene.remove(t),i.scene.remove(s)):"player"==s.type&&e(t,s)&&(i.player.ttl=0)}i.wireframe.update(),i.light.update(),i.player.isAlive()||function(t){t.stop();const i=document.querySelector("#gameOverScreen"),e=document.querySelector("#gameUi");i.classList.remove("hidden"),e.classList.add("hidden")}(s)},render(){gt.fillStyle="#141412",gt.fillRect(0,0,pt.width,pt.height),i.tileEngine.renderLayer("ground"),i.tileEngine.renderLayer("collision"),i.scene.render(),i.light.render(),i.tileEngine.renderLayer("foreground");for(const t of i.scene.hudObjects)t.render()}});!function(t){const i=document.querySelector("#startScreen"),e=document.querySelector("#gameUi"),s=document.querySelector("#btnStartGame");Q=()=>{i.classList.add("hidden"),e.classList.remove("hidden"),t.start()},s.addEventListener("click",Q),s.removeAttribute("disabled")}(s),new URLSearchParams(window.location.search).get("debug")&&Q()}})();